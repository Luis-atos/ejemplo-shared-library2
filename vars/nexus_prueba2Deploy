 def taskUrl
pipeline {
     agent any
	 tools{
	   maven "apache-maven-3.8.6"
	   jdk "jdk1.8.0_321"
	 }
    stages{
        stage("inicializa"){
		steps{
		  echo " **** variables ****** de MAVEN ****** "
		}
		}
	    stage("tres"){
        steps{
                    script{
			
			def pathWS = pwd()
			echo " **** ${pathWS} ****** GIT JSON LIBRERIAS ****** "
			checkout([
                        $class: 'GitSCM',
                        branches: [[name: "feature_selenium"]],
                        doGenerateSubmoduleConfigurations: false,
                 //       extensions: [[
                  //          $class: 'RelativeTargetDirectory',
			//	relativeTargetDir: "/var/lib/jenkins/workspace/pipeline_prueba"
              //          ]],
                        submoduleCfg: [],
                        userRemoteConfigs: [[
                            credentialsId: 'jenkins120_GitLab',
                            url: 'git@git.servdev.mdef.es:sistemas/experimentos/papelera/pruebatest.git'
                        ]]
                    ])
			
		    }
		}
    }
        stage("One"){
            steps {
            script{
			
             sleep 2
             echo 'hello'
		  //       def output = sh(script: 'mvn -Djdk.tls.maxCertificateChainLength=20 -Djavax.net.ssl.trustStore=/etc/pki/ca-trust/extracted/java/cacerts -Djava.net.ssl.trustStorePassword=changeit -f pom.xml clean install dependency:copy-dependencies sonar:sonar -Dsonar.login=Developer -Dsonar.password=Developer', returnStdout: true)
     sleep(10)
   /*  sh 'chmod 777 /var/lib/jenkins/workspace/PIPELINE_animo/target/PruebaTest2-0.0.1-SNAPSHOT.jar'   
 sh 'curl -v -k -L\
    -F "r=releases" \
    -F "g=PruebaTest2" \
    -F "a=PruebaTest2-0.0.1" \
    -F "v=0.0.1" \
    -F "p=jar" \
    -F "file=/var/lib/jenkins/workspace/PIPELINE_animo/targetPruebaTest2-0.0.1-SNAPSHOT.jar" \
    -u deployment:cc0msi2016 \
    http://srvcceacml35:8081/repository/releases/'
    */
def output = sh(script: 'mvn  -Djdk.tls.maxCertificateChainLength=20 -Djavax.net.ssl.trustStore=/etc/pki/ca-trust/extracted/java/cacerts -Djava.net.ssl.trustStorePassword=changeit deploy:deploy-file dependency:copy-dependencies -DgeneratePom=false -DrepositoryId=Minisdef -Durl=https://nexus.servdev.mdef.es/repository/snapshots/ -DpomFile=pom.xml -Dfile=target/PruebaTest2-0.0.1-SNAPSHOT.jar', returnStdout: true)
	/*	         
		         taskUrl = output.find(~"http://divindesonar.mdef.es:9000/api/ce/task\\?id=[\\w-]*")
		         echo "---->" + taskUrl
		    withCredentials([string(credentialsId: 'secret_TOKEN_sonarqube', variable: 'secret')]) {
			    def sonarData = readJSON text: sh(script: "curl -u ${secret}: " + taskUrl, returnStdout: true)
                    }
		        // def sonarData = readJSON text: sh(script: "curl -u e137cb4e88e85bc1a25684db220b9e1110ac8ac0: " + taskUrl, returnStdout: true)
			 sleep 5
			 */
          }
            }
        }
    stage("dos"){
          steps {
         echo 'dos dos'

          }
    }
    
    }
}
